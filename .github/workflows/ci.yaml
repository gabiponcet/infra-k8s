name: Provision Infrastructure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install LocalStack CLI
        run: pip install localstack

      - name: Start LocalStack with Docker
        run: |
          export LAMBDA_EXECUTOR=docker
          localstack start -d
        env:
          LAMBDA_EXECUTOR: docker

      - name: Wait for LocalStack
        run: |
          for i in {1..30}; do
            nc -zv localhost 4566 && break
            echo "Waiting for LocalStack to be ready..."
            sleep 10
          done

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1

  deploy-staging:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create Deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:owner/:repo/deployments
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          ref: ${{ github.sha }}
          environment: staging
          description: "Deploying to staging environment"
          transient_environment: true
          production_environment: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Staging
        run: echo "Deploying to staging environment"

      - name: Create Deployment Status
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:owner/:repo/deployments/:deployment_id/statuses
          deployment_id: ${{ steps.create_deployment.outputs.id }}
          state: success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create Deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:owner/:repo/deployments
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          ref: ${{ github.sha }}
          environment: production
          description: "Deploying to production environment"
          transient_environment: false
          production_environment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Production
        run: echo "Deploying to production environment"

      - name: Create Deployment Status
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:owner/:repo/deployments/:deployment_id/statuses
          deployment_id: ${{ steps.create_deployment.outputs.id }}
          state: success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}